---
AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys single EC2 and VPC whatever
Parameters:
  # Ownership
  EnvironmentName:
    Description: Name of the project in what EnvironmentName
    Type: String
    Default: <Projectname>Dev
  Owner:
    Description: Name for contact purpose
    Type: String
    Default: Name or TeamName
  Project:
    Description: Name of the project
    Type: String
    Default: eg. Project Blah Blah
  # Subnets
  IPv4CidrBlock:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  AvailabilityZone1:
    Type: String
    Default: a
    AllowedValues:
    - a
    - b
    - c
    - d
    - e
    - f
  AvailabilityZone2:
    Type: String
    Default: b
    AllowedValues:
    - a
    - b
    - c
    - d
    - e
    - f
  PublicSubnetCidrBlock1:
    Description: IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.1.0/24
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PublicSubnetCidrBlock2:
    Description: IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.0.0/24
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PrivateSubnetCidrBlock1:
    Description: IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.4.0/24
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  PrivateSubnetCidrBlock2:
    Description: IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.0.3.0/24
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

  # Remote Access Network
  RemoteCidrForSecurityGroup:
    Description: CIDR Block for SG to Grant Access to Instances (i.e. 112.199.104.126/32)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 112.199.104.126/32
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  # Instance
  VPC:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: AWS::EC2::Subnet::Id
  KeyName:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 112.199.104.126/32
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  # EC2 and Security Groups
  EC2Instance:  
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      NetworkInterfaces:
        - GroupSet:
            - !Ref InstanceSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref SubnetId
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: InstanceType
          - Arch
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
      - Key: Project
        Value: !Ref Project
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join [ "", [ !Ref "AWS::StackName", "-remote-to-instance" ] ]
      - Key: Owner
        Value: !Ref Owner
      - Key: Project
        Value: !Ref Project
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-013be31976ca2c322
Outputs:
  EnvironmentName:
    Description: Project name plus environment name
    Value: !Ref EnvironmentName
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value: !Ref Owner
  Project:
    Description: The project name
    Value: !Ref Project
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Ownership
      Parameters:
      - EnvironmentName
      - Owner
      - Project
    - Label:
        default: Remote Access
      Parameters:
      - RemoteCidrForSecurityGroup
    - Label:
        default: Instance
      Parameters:
      - InstanceType
      - KeyName
      - SSHLocation
    ParameterLabels:
      EnvironmentName:
        default: Environment Name
      Owner:
        default: Team or Individual Owner
      RemoteCidrForSecurityGroup:
        default: Access for SG
      IPv4CidrBlock:
        default: IPv4 CIDR Block
      PublicSubnetCidrBlock1:
        default: Public Subnet 1
      PublicSubnetCidrBlock2:
        default: Public Subnet 2
      PrivateSubnetCidrBlock1:
        default: Private Subnet 1
      PrivateSubnetCidrBlock2:
        default: Private Subnet 2
      AvailabilityZone1:
        default: Availability Zone 1
      AvailabilityZone2:
        default: Availability Zone 2
      AllowRemoteNetworkPublicRuleNumber:
        default: Allow Remote Network
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance
      - PublicIp