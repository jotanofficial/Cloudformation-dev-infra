AWSTemplateFormatVersion: 2010-09-09
Conditions:
  CreateCodeBuildResources: !Equals
  - true
  - true
  CreateWebSiteS3Bucket: !Equals
  - true
  - false
  UseSubnet: !Not
  - !Equals
    - !Ref 'SubnetId'
    - subnet-none
Description: A PHP Laravel web application deployed to Amazon EC2.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Application
      Parameters:
      - ProjectId
  CodeBuildImage: aws/codebuild/eb-java-8-amazonlinux-64:2.4.3
  CodeBuildImageOverride: aws/codebuild/eb-java-8-amazonlinux-64:2.4.3
  CreateCodeBuild: true
  ProjectTemplateId: webapp-phplaravel-ec2
  WebsiteS3Bucket: AWS::NoValue
Parameters:
  AppName:
    Description: Name of the application.
    MaxLength: 100
    MinLength: 1
    Type: String
  ProjectId:
    AllowedPattern: ^[a-z]([a-z0-9-])+$
    ConstraintDescription: Project IDs must be between 2 and 15 characters, begin with a letter, and only contain lowercase letters, numbers, and hyphens (-).
    Description: Project ID.
    MaxLength: 15
    MinLength: 2
    Type: String
  RepositoryName:
    Description: AWS CodeCommit repository name.
    MaxLength: 100
    MinLength: 1
    Type: String
  SubnetId:
    Default: subnet-none
    Description: The name of the VPC subnet to use for Amazon EC2 instances launched for this project.
    Type: String
  VpcId:
    Description: The ID of the Amazon Virtual Private Cloud (VPC) to use for Amazon EC2 instances.
    Type: AWS::EC2::VPC::Id
Resources:
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codestar:SyncResources
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:DescribeTable
            - kinesis:CreateStream
            - kinesis:DeleteStream
            - kinesis:DescribeStream
            - s3:CreateBucket
            - s3:DeleteBucket
            - sns:CreateTopic
            - sns:DeleteTopic
            - sns:GetTopicAttributes
            - sns:ListTopics
            - sns:SetTopicAttributes
            - ec2:*
            - autoscaling:*
            - elasticloadbalancing:*
            Effect: Allow
            Resource:
            - '*'
          - Action:
            - cloudformation:CreateChangeSet
            Effect: Allow
            Resource:
            - arn:aws:cloudformation:ap-southeast-1:aws:transform/Serverless-2016-10-31
            - arn:aws:cloudformation:ap-southeast-1:aws:transform/CodeStar
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - !GetAtt 'WebAppRole.Arn'
        PolicyName: CodeStarWorkerCloudFormationRolePolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CloudFormation'
    Type: AWS::IAM::Role
  CodeBuildPolicy:
    Condition: CreateCodeBuildResources
    Description: Setting IAM policy for service role for Amazon EC2 instances
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'S3Bucket'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'S3Bucket'
              - /*
        - !If
          - CreateWebSiteS3Bucket
          - Action:
            - s3:PutObject*
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource:
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'AWS::NoValue'
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'AWS::NoValue'
                - /*
          - !Ref 'AWS::NoValue'
        - Action:
          - codecommit:GitPull
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn
              - aws
              - codecommit
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Ref 'RepositoryName'
        - Action:
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn:aws:kms
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Join
                - /
                - - alias
                  - aws/s3
      PolicyName: CodeStarWorkerCodeBuildPolicy
      Roles:
      - !Ref 'CodeBuildRole'
    Type: AWS::IAM::Policy
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
    - CodeBuildPolicy
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Description: !Join
      - ''
      - - 'AWS CodeStar created CodeBuild Project for '
        - !Ref 'AppName'
      Environment:
        ComputeType: small
        EnvironmentVariables:
        - Name: S3_BUCKET
          Value: !Ref 'S3Bucket'
        - Name: WEBSITE_S3_PREFIX
          Value: !If
          - CreateWebSiteS3Bucket
          - !Join
            - ''
            - - https://s3-ap-southeast-1.amazonaws.com/
              - !Ref 'AWS::NoValue'
          - NoVal
        - Name: WEBSITE_S3_BUCKET
          Value: !If
          - CreateWebSiteS3Bucket
          - !Ref 'AWS::NoValue'
          - NoVal
        Image: aws/codebuild/eb-java-8-amazonlinux-64:2.4.3
        Type: LINUX_CONTAINER
      Name: !Ref 'ProjectId'
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: codepipeline
    Type: AWS::CodeBuild::Project
  CodeBuildRole:
    Condition: CreateCodeBuildResources
    Description: Creating service role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join
      - '-'
      - - CodeStarWorker
        - !Ref 'ProjectId'
        - CodeBuild
    Type: AWS::IAM::Role